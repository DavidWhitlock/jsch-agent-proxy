<project name="jsch-agent-proxy" default="dist" basedir=".">
    <description>
    </description>

  <!-- set global properties for this build -->
  <property name="version" value="0.0.1"/>
  <property name="src" location="src/main/java/"/>
  <property name="exasrc" location="examples"/>
  <property name="build" location="build"/>
  <property name="exabuild" location="examples"/>
  <property name="dist"  location="dist"/>
  <property name="javadoc" location="javadoc"/>
  <property name="javac.debug" value="true"/>

  <property name="j.a.p.jar"
            value="jsch-agent-proxy-${version}.jar"/>
  <property name="j.a.p.j.jar"
            value="jsch-agent-proxy-jsch-${version}.jar"/>
  <property name="j.a.p.p.jar"
            value="jsch-agent-proxy-pageant-${version}.jar"/>
  <property name="j.a.p.s.jar"
            value="jsch-agent-proxy-sshagent-${version}.jar"/>
  <property name="j.a.p.u.j.jar"
            value="jsch-agent-proxy-usocket-junixsocket-${version}.jar"/>
  <property name="j.a.p.u.jna.jar"
            value="jsch-agent-proxy-usocket-jna-${version}.jar"/>

  <!-- dependent jar files -->
  <path id="project.class.path">
<!--
    <pathelement location="lib/jsch-0.1.46.jar"/>
    <pathelement location="lib/jna-3.4.0.jar"/>
    <pathelement location="lib/platform-3.4.0.jar"/>
    <pathelement location="lib/junixsocket-1.3.jar"/>
-->
    <fileset dir="lib" includes="*.jar"/>
  </path>

  <target name="init">
    <tstamp/>
    <mkdir dir="${build}"/>
  </target>

  <available property="junixsocket.available"
             classpathref="project.class.path"
             classname="org.newsclub.net.unix.AFUNIXSocket"/>

  <target name="compile" depends="init"
        description="compile the source" >
    <javac srcdir="${src}"
           destdir="${build}"
           classpathref="project.class.path"
           includeantruntime="false"
           debug="${javac.debug}">
      <exclude name="**/JUnixDomainSocketFactory.java"
               unless="${junixsocket.available}"/>
    </javac>
  </target>

  <target name="dist" depends="compile, junixsocket.jar"
        description="generate the distribution" >

    <mkdir dir="${dist}/lib"/>

    <jar jarfile="${dist}/lib/${j.a.p.jar}"
         includes="com/jcraft/jsch/agentproxy/*.class"
         excludes="**/RemoteIdentityRepository*.class"
         basedir="${build}"/>

    <jar jarfile="${dist}/lib/${j.a.p.p.jar}"
         includes="**/connector/Pageant*.class"
         basedir="${build}"/>

    <jar jarfile="${dist}/lib/${j.a.p.s.jar}"
         includes="**/connector/SSHAgentConnector*.class"
         basedir="${build}"/>

    <jar jarfile="${dist}/lib/${j.a.p.j.jar}"
         includes="**/RemoteIdentityRepository*.class"
         basedir="${build}"/>

    <jar jarfile="${dist}/lib/${j.a.p.u.jna.jar}"
         includes="**/JNAUSocketFactory*.class"
         basedir="${build}"/>
  </target>

  <target name="junixsocket.jar" depends="compile" if="junixsocket.available">
    <jar jarfile="${dist}/lib/${j.a.p.u.j.jar}"
         includes="**/JUnixDomainSocketFactory*.class"
         basedir="${build}"/>
  </target>

  <target name="examples"
  	description="compiles the examples"
	depends="dist">
	
    <path id="compile.classpath">
      <fileset dir="lib" includes="*.jar"/>
      <pathelement location="${build}" /> 
    </path>

    <javac srcdir="${exasrc}"
           destdir="${exabuild}"
           includeantruntime="false"
           debug="${javac.debug}">
      <classpath refid="compile.classpath"/>
    </javac>
    
  </target>

  <target name="clean" description="clean up" >
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="${javadoc}"/>
    <delete>
      <fileset dir="examples" includes="**/*.class" />
    </delete>
  </target>

  <target name="javadoc">
    <javadoc sourcepath="${src}"
             destdir="${javadoc}">
      <packageset dir="${src}"/>
    </javadoc>
  </target>
</project>
